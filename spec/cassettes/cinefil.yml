---
http_interactions:
- request:
    method: get
    uri: http://www.cinefil.com/bandes-annonces-cinema/sorties-de-la-semaine
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 10 Apr 2017 16:08:08 GMT
      Content-Type:
      - text/html; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Set-Cookie:
      - XSRF-TOKEN=eyJpdiI6IjZmM2VuMzdpUVozVHRITEprQmVMTkE9PSIsInZhbHVlIjoieHpPQmV2anowcldaZ05GVlpMZ2g1b3p1YnQ3ZWIydGo2c1dBNVRnYngxbnJoUGxNUSsyK09oSTB1NDlCSnJad0NrQ3JyQTd2bWZEOExScnI4Tjgrcmc9PSIsIm1hYyI6Ijk5NmEwMjQyNzZhMjU4OWNhNmYyNzFmZjdmOTQ2MjY5NDIxNTMzMWJiNzExMmQ4YzIyMTQyY2I5MjI1YWU4NjEifQ%3D%3D;
        expires=Mon, 10-Apr-2017 18:08:08 GMT; Max-Age=7200; path=/
      - __cfduid=d41c88aae3e45d355a4d2e5dda53f32b11491840488; expires=Tue, 10-Apr-18
        16:08:08 GMT; path=/; domain=.cinefil.com; HttpOnly
      - laravel_session=eyJpdiI6IithdXhuakFkMThDN0l5ZGJjZW85U3c9PSIsInZhbHVlIjoiTXZHa2VtN3laTVFhaStiTDZMc1ZyWDFiTk5YQXplZ3JCVEk0VGpsSEFCWm15ZGpCZ0VQVTQxcXhId2N3QVJnTDdmcDJUZnRhaUdRQ1V3Ylk3WDhReEE9PSIsIm1hYyI6Ijg3ODZkZDJmMjAwY2FhMmIyMmJhYjYyNzExYmYyZTQ0ZTliMjgzZWUzZDdmOWI1OTJkZTIwZjg5NTJkNTliODQifQ%3D%3D;
        expires=Mon, 10-Apr-2017 18:08:08 GMT; Max-Age=7200; path=/; httponly
      Cache-Control:
      - no-cache
      Vary:
      - Accept-Encoding
      X-Powered-By:
      - PHP/5.5.9-1ubuntu4.9
      Server:
      - cloudflare-nginx
      Cf-Ray:
      - 34d6f68c2092103d-CDG
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Mon, 10 Apr 2017 16:08:08 GMT
recorded_with: VCR 3.0.3
